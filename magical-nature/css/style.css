/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/**
* ? Previously we needed to use some tools like normalize in order to reset the
* ? default styles for the browser, but nowadays that is not required anymore, so
* ? we can instead use the UNIVERSAL SELECTOR
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* ? It changes the box model so the borders and the 
                            ? paddings are not longer added to the total width 
                            ? or the total height that we specify for a box */
}

body {
  font-family: "Lato", sans-serif; /* Including lato as a font-family, if it is not available, then use sans-serif*/
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* ? This means 1.7 times bigger than the predefined line height */
  color: #777;
  padding: 30px; /* This is not inherited */
}

.header {
  height: 95vh; /* 95% of the viewport height */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url('../img/hero.jpg');
  background-size: cover; /* fit the element inside of the box */
  background-position: top;

  /* adding position due to logo-box */
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/* The position of the logo is going to be based on its parent element, in this case header, so that is why we need to add position to it. */
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* This is to fix a shake that is happening in the animation */
  /* It determines if the back part of the element when we transform it is visible of hidden for the user
  So Imagine we have an element and we rotate it 180 degress, so it would be logical that we then see the back part of
  that element. But if we use backface-visibility hidden, then that back part actually gets hidden. */
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.heading-primary-main {
  /* blocks takes the whole width */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  /* Start the animation after 3 seconds */
  /* animation-delay: 3s; */
  
  /* How many times the animation is going to occur */
  /* animation-iteration-count: 3; */
  
  /* How the animation will proceed: How fast, how slow */
  animation-timing-function: ease-out; /* faster to slower | ease-in: slower to faster */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out;
  /* animation-name: moveInRight; */
  /* animation-duration: 1s ease-out; */
  /* animation-timing-function: ease-out; */
}

/* keyframes are going to help us to add animations to our design */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* Link: is a pseudo-class, and pseudo classes are a special state of a selector, so in this case
It is a state of the button selector 

Visited: So this is the state when the user has already clicked on the button once before and then sees
the button again*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px; /* valuepx: applies all, valueX - valueY: top-bottom left-right, valX-valY-valZ-ValU: top-right-bottom-left*/
  display: inline-block;
  border-radius: 100px; /* This is for rounding the button */
  transition: all .2s;

  /* ? For positioning, can we use this as previously with transform? It would not be a good idea. */
  /* 
  * So in this case because the display: inset-block;, this could be threated as text, so that will be fixed
  * adding text-align: center; in .text-box above 
  */
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, .2); /* x position, y position, blur value, color of the shadow */
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}