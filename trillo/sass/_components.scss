////////////////////////////////////////////////////////////
// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

////////////////////////////////////////////////////////////
// SEARCH
.search {
  // * Not grow to fill all its available space, no shrink, occupy the 40% of the header
  flex: 0 0 40%;

  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    // Because fonts do not take cascade values automatically
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s;

    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    // For giving a color to a SVG
    fill: var(--color-grey-dark-3);
  }
}

////////////////////////////////////////////////////////////
// USER NAVIGATION
.user-nav {
  display: flex;
  align-items: center;
  align-self: stretch;

  // The item and its direct children
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    // Parent elemtn should be relative, when children will have position absolute
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);    
  }

  &__notification {
    font-size: .8rem;    
    height: 1.7rem;
    width: 1.7rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // * FlexBox does also work with text
    display: flex;
    justify-content: center;
    align-items: center;
  }

  // &__user {}

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }

  // &__user-name {}
}


////////////////////////////////////////////////////////////
// SIDE NAVIGATION

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: .5rem;
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    transition: transform .2s,
                width .4s cubic-bezier(1, 0, 0, 1) .2s,
                background-color .1s;
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    // z-index only works when position is specified
    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.7rem;
    height: 1.7rem;
    margin-right: 2rem;
    // The curret color of the parent element (based on its current state)
    fill: currentColor;
  }
}


////////////////////////////////////////////////////////////
// LEGAL TEXT

.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}



////////////////////////////////////////////////////////////
// GALLERY

.gallery {
  display: flex;

  // Remember that in reponsive design we also want flexible images, so we always have to define a width
  // or a height in precentages so that the image stays fluid.
  &__photo {
    width: 100%;
    // If we do not want white space, we should always define DISPLAY BLOCK OR INLINE-BLOCK
    display: block;
  }
}


////////////////////////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
  display: flex;
  // justify-content: space-between; // This will not work to have the final result.

  &__heading {}

  &__stars {
    // for occupying the whole space, this will help us to have the final result.
    // ! this is not ideal
    // Because this element should only be the size of its content, so in this case the size
    // of the starts. We do not want it to have all the extra size.
    // ? This will be solved by MARGING AUTO
    // flex: 1; 
    margin-right: auto;
  }

  &__icon-star,
  &__icon-location {
    width: 1.7rem;
    height: 1.7rem;
    fill: var(--color-primary);
  }

  &__location {}

  &__rating {}

  &__rating-average {}

  &__rating-count {}
}
